/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Illiak' at '5/3/16 10:48 AM' with Gradle 2.13
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.13/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'

archivesBaseName = "KeyVue"
version = '1.0'
applicationName = "KeyVue"
mainClassName = "App"

distributions {
    main {
        contents {
            from('resources/mySQL.properties') {
                into 'bin/resources'
            }
        }
    }
}

tasks.withType(CreateStartScripts) {
    classpath += files('resources/mySQL.properties')
}


// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter();
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
	compile 'org.slf4j:slf4j-api:1.7.21'
	compile group: 'com.sparkjava', name: 'spark-core', version: '2.1'
	compile group: 'org.apache.velocity', name: 'velocity', version: '1.7'
	compile 'commons-net:commons-net:3.4'
	// compile group: 'mysql', name: 'mysql-connector-java', version: "5.1.6"
	compile 'mysql:mysql-connector-java:5.1.38'
	compile 'net.lingala.zip4j:zip4j:1.3.2'
	compile 'commons-io:commons-io:2.4'
	compile 'com.googlecode.json-simple:json-simple:1.1.1'
	testCompile group: 'junit', name: 'junit', version: '4.+'
	testCompile group: 'org.fluentlenium', name: 'fluentlenium-core', version: '0.10.3'
	testCompile group: 'org.fluentlenium', name: 'fluentlenium-assertj', version: '0.10.3'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    // testCompile 'junit:junit:4.12'
}

defaultTasks = ['clean']
task stage(dependsOn: ['clean', 'installApp'])
